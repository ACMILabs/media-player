# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
FROM balenalib/%%BALENA_ARCH%%-ubuntu-python:3.8-latest-run

# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
RUN install_packages \
  vlc \
  vlc-plugin-* \
  g++ \
  xserver-xorg-video-intel \
  xserver-xorg-input-evdev \
  xinit \
  xfce4 \
  xfce4-terminal \
  x11-xserver-utils \
  dbus-x11 \
  matchbox-keyboard \
  xterm \
  unclutter \
  # For system volume
  libasound2-dev \
  # Audio
  alsa-utils \
  # Intel GPU drivers for VLC
  i965-va-driver \
  vainfo \
  vdpau-va-driver \
  # To build kernel module for Dante
  curl \
  wget \
  build-essential \
  libelf-dev \
  awscli \
  bc \
  flex \
  libssl-dev \
  python \
  bison \
  git

# Build kernel module for Dante
ENV VERSION '2.47.0+rev1.prod 2.50.4+rev1.prod'
# RUN BALENA_MACHINE_NAME=%%BALENA_MACHINE_NAME%% ./scripts/build.sh build --device %%BALENA_MACHINE_NAME%% --os-version "$VERSION" --src dante

# From: https://forums.balena.io/t/nvidia-drivers-on-intel-nuc/2903 and https://bitbucket.org/MergingTechnologies/ravenna-alsa-lkm/src/master/
# ENV RESINOS_VERSION=2.50.1%2Brev1.prod
# ENV YOCTO_VERSION=5.2.10
# RUN wget https://files.resin.io/images/intel-nuc/${RESINOS_VERSION}/kernel_modules_headers.tar.gz
# RUN tar -xf kernel_modules_headers.tar.gz && rm -rf kernel_modules_headers.tar.gz
# RUN mkdir -p /lib/modules/${YOCTO_VERSION}-yocto-standard
# RUN mv ./kernel_modules_headers /lib/modules/${YOCTO_VERSION}-yocto-standard/build
# RUN ln -s /lib64/ld-linux-x86-64.so.2 /lib/ld-linux-x86-64.so.2
# RUN git clone https://github.com/ACMILabs/alsa-ravenna-lkm.git
# RUN cd alsa-ravenna-lkm/driver && make && sudo cp MergingRavennaALSA.ko /lib/modules/$(uname -r)/kernel/drivers && sudo cp MergingRavennaALSA.ko /lib/modules/${YOCTO_VERSION}-yocto-standard/kernel/drivers
# RUN depmod
# RUN sudo insmod MergingRavennaALSA.ko

# Disable screen from turning it off
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms' >> /etc/X11/xinit/xserverrc

# Avoid requesting XFCE4 question on X start
ENV XFCE_PANEL_MIGRATE_DEFAULT=1

ENV PYTHONUNBUFFERED 1

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV 1

# Set dbus environment variables
ENV DBUS_SYSTEM_BUS_ADDRESS unix:path=/host/run/dbus/system_bus_socket

# Copy Intel display settings for Dell OptiPlex 3070
COPY ./conf/20-intel.conf /usr/share/X11/xorg.conf.d/20-intel.conf

# Copy X desktop settings to set the wallpaper
COPY ./conf/xfce4-desktop.xml /root/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
COPY ./conf/xfce4-panel.xml /root/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml

COPY ./requirements/base.txt /code/requirements/base.txt
COPY ./requirements/prod.txt /code/requirements/prod.txt
RUN pip install -Ur /code/requirements/prod.txt

# Remove the panel completely
COPY ./conf/xinitrc /etc/xdg/xfce4/
COPY ./conf/xinitrc /root/.config/xfce4/

COPY . /code/
WORKDIR /code/

COPY ./resources/FaktPro-Normal.otf /usr/share/fonts/truetype/freefont/FaktPro-Normal.otf
COPY ./resources/FaktPro-NormalItalic.otf /usr/share/fonts/truetype/freefont/FaktPro-NormalItalic.otf
COPY ./resources/FaktPro-Bold.otf /usr/share/fonts/truetype/freefont/FaktPro-Bold.otf
COPY ./resources/FaktPro-BoldItalic.otf /usr/share/fonts/truetype/freefont/FaktPro-BoldItalic.otf

# x86.sh will run when the container starts up on any non-Raspberry Pi device (i.e. Intel OptiPlex, NUC)
# CMD ["bash"]
CMD ["bash","scripts/x86.sh"]
